{"version":3,"sources":["views/charts/apex/StatChart.js","views/charts/apex/ApexAreaCharts.js","views/charts/apex/index.js"],"names":["StatChart","props","Card","CardHeader","className","CardTitle","tag","head","CardSubtitle","title","size","onChange","selectedDates","dateStr","instance","onChangeDate","tableName","options","locale","Russian","dateFormat","minDate","defaultDate","maxDate","mode","CardBody","series","type","height","areaColors","connect","state","registrationOptions","statPage","testOptions","getChart","regTable","testTable","useEffect","createOptions","categories","colors","afterDate","chart","zoom","enabled","parentHeightOffset","toolbar","show","markers","strokeWidth","strokeOpacity","strokeColors","dataLabels","stroke","curve","grid","xaxis","lines","tooltip","custom","data","seriesIndex","dataPointIndex","length","yaxis","opposite","direction","createSeries","name","optionsReg","reg","after","seriesReg","optionsTest","test","seriesTest","dates","split","ApexCharts","Row","Col","sm"],"mappings":"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","file":"static/js/15.f69c6039.chunk.js","sourcesContent":["import {Card, CardBody, CardHeader, CardSubtitle, CardTitle} from \"reactstrap\";\nimport {Calendar} from \"react-feather\";\nimport Flatpickr from \"react-flatpickr\";\nimport {Russian} from \"flatpickr/dist/l10n/ru\";\nimport Chart from \"react-apexcharts\";\nimport React from \"react\";\n\nconst StatChart = (props) => {\n    return (\n        <Card>\n            <CardHeader className='d-flex flex-md-row flex-column justify-content-md-between justify-content-start align-items-md-center align-items-start'>\n                <div>\n                    <CardTitle className='mb-75' tag='h4'>\n                        {props.head}\n                    </CardTitle>\n                    <CardSubtitle className='text-muted'>{props.title}</CardSubtitle>\n                </div>\n                <div className='d-flex align-items-center mt-md-0 mt-1'>\n                    <Calendar size={17} />\n                    <Flatpickr\n                        onChange={(selectedDates, dateStr, instance) => props.onChangeDate(dateStr, props.tableName)}\n                        options={{\n                            locale: Russian,\n                            dateFormat: 'd/m/Y',\n                            minDate: props.defaultDate[0],\n                            maxDate: props.defaultDate[1],\n                            mode: 'range',\n                            defaultDate: props.defaultDate\n                        }}\n                        className='form-control flat-picker bg-transparent border-0 shadow-none'\n                    />\n                </div>\n            </CardHeader>\n            <CardBody>\n                <Chart options={props.options} series={props.series} type='area' height={400} />\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default StatChart;","import React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {getChart} from \"../../../redux/reducers/stat-reducer\";\nimport StatChart from \"./StatChart\";\n\nconst areaColors = {\n    series3: '#a4f8cd',\n    series2: '#60f2ca',\n    series1: '#2bdac7'\n}\n\nconst ApexAreaCharts = (props) => {\n    const defaultDate = ['01/04/2021', '30/04/2021'];\n    const regTable = 'user_reg_date';\n    const testTable = 'user_endtest_date';\n    useEffect(() => {\n        props.getChart(defaultDate, regTable);\n        props.getChart(defaultDate, testTable);\n    }, []);\n    const createOptions = (categories, colors, afterDate) => {\n        return {\n            chart: {\n                zoom: {\n                    enabled: false\n                },\n                parentHeightOffset: 0,\n                toolbar: {\n                    show: false\n                }\n            },\n\n            markers: {\n                strokeWidth: 7,\n                strokeOpacity: 1,\n                strokeColors: ['#fff'],\n                colors: [colors]\n            },\n            dataLabels: {\n                enabled: false\n            },\n            stroke: {\n                curve: 'straight'\n            },\n            colors: [colors],\n            grid: {\n                xaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            tooltip: {\n                custom(data) {\n                    return `<div class='px-1 py-50'>\n              <span>${data.series[data.seriesIndex][data.dataPointIndex]}</span>\n            </div>`\n                }\n            },\n            xaxis: {\n                categories: categories.length === 1 ? [afterDate, categories[0]] : categories\n            },\n            yaxis: {\n                opposite: props.direction === 'rtl'\n            }\n        }\n    }\n    const createSeries = (name, data) => {\n        return [\n            {\n                name,\n                data: data.length === 1 ? [0, data[0]] : data\n            }\n        ]\n    }\n\n    const optionsReg = createOptions(props.registrationOptions.categories, areaColors.series1, props.selectedDates.reg.after);\n    const seriesReg = createSeries('Пользователей', props.registrationOptions.data);\n\n    const optionsTest = createOptions(props.testOptions.categories, areaColors.series2, props.selectedDates.test.after);\n    const seriesTest = createSeries('Тестирование', props.testOptions.data);\n\n    const onChangeDate = (dateStr, tableName) => {\n        const dates = dateStr.split(' ');\n        if (dates[0] && dates[2]) {\n            props.getChart([dates[0], dates[2]], tableName);\n        }\n    }\n\n    return (<>\n        <StatChart\n            head={'Регистрация'}\n            title={'График регистрации пользователей'}\n            onChangeDate={onChangeDate}\n            defaultDate={defaultDate}\n            options={optionsReg}\n            series={seriesReg}\n            tableName={regTable}\n        />\n\n        <StatChart\n            head={'Тестирование'}\n            title={'График прохождения тестирования'}\n            onChangeDate={onChangeDate}\n            defaultDate={defaultDate}\n            options={optionsTest}\n            series={seriesTest}\n            tableName={testTable}\n        />\n    </>)\n}\n\nconst mapStateToProps = (state) => ({\n    registrationOptions: state.statPage.registrationOptions,\n    testOptions: state.statPage.testOptions,\n    selectedDates: state.statPage.selectedDates\n});\n\nexport default connect(mapStateToProps, {getChart})(ApexAreaCharts);\n","// ** React Imports\nimport React, { Fragment, useContext } from 'react'\n\n// ** Third Party Components\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Context\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\n// ** Charts\nimport ApexBarChart from './ApexBarChart'\nimport ApexLineChart from './ApexLineChart'\nimport ApexAreaChart from './ApexAreaCharts'\nimport ApexRadarChart from './ApexRadarChart'\nimport ApexDonutChart from './ApexDonutChart'\nimport ApexRadialBarChart from './ApexRadialbar'\nimport ApexColumnChart from './ApexColumnCharts'\nimport ApexHeatmapChart from './ApexHeatmapChart'\nimport ApexScatterChart from './ApexScatterCharts'\nimport ApexCandlestickChart from './ApexCandlestickChart'\n\n// ** Styles\nimport '@styles/react/libs/charts/apex-charts.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst ApexCharts = () => {\n\n  return (\n    <Fragment>\n      <Row className='match-height'>\n        <Col sm='12'>\n          <ApexAreaChart direction={'rtl'} />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default ApexCharts\n"],"sourceRoot":""}
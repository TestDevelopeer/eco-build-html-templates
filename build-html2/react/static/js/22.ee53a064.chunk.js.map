{"version":3,"sources":["@core/components/app-collapse/index.js","views/pages/certificate/PricingFaqs.js","views/pages/certificate/PricingCards.js","assets/images/illustration/pricing-Illustration.svg","views/pages/certificate/PricingTrial.js","views/pages/certificate/PricingHeader.js","views/pages/certificate/index.js"],"names":["AppCollapse","props","data","type","accordion","active","toggle","titleKey","contentKey","className","useState","openCollapse","setOpenCollapse","handleCollapseToggle","id","arr","index","indexOf","includes","splice","push","classnames","map","item","title","content","text","collapsed","onMouseEnter","onClick","size","isOpen","defaultProps","PricingFaqs","Row","Col","sm","lg","offset","connect","state","userId","authPage","login","endDate","profilePage","profile","percent","getAllAnswers","srcAsset","configApi","SERVER_URI","certificateCard","name","rewards","certificate","diplom","imgClasses","linkProps","tag","Link","to","link","Card","toLowerCase","CardBody","Badge","color","btn","pill","level","src","img","alt","CardText","subtitle","Button","Ripple","outline","block","disabled","target","href","md","xs","trialSvg","style","transform","PricingHeader","userLogin","getRewards","setData","faq","setFaq","useEffect","axios","get","then","res","dataArr","faqArr","Object","entries","forEach","key","val"],"mappings":"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","file":"static/js/22.ee53a064.chunk.js","sourcesContent":["// ** React Imports\nimport React, {useState} from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport {ChevronUp} from 'react-feather'\nimport {Collapse, Card, CardHeader, CardBody, CardTitle} from 'reactstrap'\n\nconst AppCollapse = props => {\n    // ** Props\n    const {data, type, accordion, active, toggle, titleKey, contentKey, className} = props\n\n    /**\n     ** If accordion is true then return only one active index else return an Array\n     */\n    const defaultActive = () => {\n        if (accordion) {\n            return active\n        } else {\n            return [...active]\n        }\n    }\n\n    // ** State\n    const [openCollapse, setOpenCollapse] = useState(defaultActive())\n\n    // ** Function to handle Collapse Toggle\n    const handleCollapseToggle = id => {\n        if (accordion) {\n            if (id === openCollapse) {\n                setOpenCollapse(null)\n            } else {\n                setOpenCollapse(id)\n            }\n        } else {\n            const arr = openCollapse,\n                index = arr.indexOf(id)\n            if (arr.includes(id)) {\n                arr.splice(index, 1)\n                setOpenCollapse([...arr])\n            } else {\n                arr.push(id)\n                setOpenCollapse([...arr])\n            }\n        }\n    }\n\n    // ** Function to render collapse\n    const renderData = () => {\n        return data.map((item, index) => {\n            const title = titleKey ? item[titleKey] : item.title,\n                content = contentKey ? item[contentKey] : item.content,\n                text = item.text\n\n            return (\n                <Card\n                    className={classnames('app-collapse', {\n                        [item.className]: item.className,\n                        open: accordion ? openCollapse === index : openCollapse.includes(index) && type === 'shadow'\n                    })}\n                    key={index}\n                >\n                    <CardHeader\n                        className={classnames('align-items-center', {\n                            collapsed: accordion ? openCollapse !== index : !openCollapse.includes(index)\n                        })}\n                        /*eslint-disable */\n                        {...(toggle === 'hover'\n                            ? {\n                                onMouseEnter: () => handleCollapseToggle(index)\n                            }\n                            : {\n                                onClick: () => handleCollapseToggle(index)\n                            })}\n                        /*eslint-enable */\n                    >\n                        <CardTitle className='collapse-title'>{title} <br/><strong>{text}</strong></CardTitle>\n                        <ChevronUp size={14}/>\n                    </CardHeader>\n                    <Collapse isOpen={accordion ? openCollapse === index : openCollapse.includes(index)}>\n                        <CardBody>{content}</CardBody>\n                    </Collapse>\n                </Card>\n            )\n        })\n    }\n\n    return (\n        <div\n            className={classnames('collapse-icon', {\n                [className]: className,\n                'collapse-default': !type,\n                'collapse-shadow': type === 'shadow',\n                'collapse-border': type === 'border',\n                'collapse-margin': type === 'margin'\n            })}\n        >\n            {renderData()}\n        </div>\n    )\n}\n\nexport default AppCollapse\n\n// ** PropTypes\nAppCollapse.propTypes = {\n    data: Proptypes.array.isRequired,\n    accordion: Proptypes.bool,\n    type: Proptypes.oneOf(['shadow', 'border', 'margin']),\n    active: Proptypes.oneOfType([Proptypes.array, Proptypes.number]),\n    titleKey: Proptypes.string,\n    contentKey: Proptypes.string,\n    className: Proptypes.string\n}\n\n// ** Default Props\nAppCollapse.defaultProps = {\n    active: [],\n    toggle: 'click'\n}\n","import { Row, Col } from 'reactstrap'\nimport AppCollapse from '@components/app-collapse'\n\nconst PricingFaqs = ({ data }) => {\n  return (\n    <div className='pricing-faq'>\n      <h3 className='text-center'>FAQ's</h3>\n      <p className='text-center'>Мы постарались ответить на интересующие вас вопросы.</p>\n      <Row className='my-2'>\n        <Col className='mx-auto' sm='12' lg={{ size: 10, offset: 2 }}>\n          <AppCollapse type='margin' data={data} titleKey='question' contentKey='ans' accordion />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default PricingFaqs\n","import classnames from 'classnames'\nimport {Row, Col, Card, CardBody, CardText, Badge, ListGroup, Button} from 'reactstrap'\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport configApi from \"../../../api/config\";\nimport React from \"react\";\nimport {Lock} from \"react-feather\";\nimport {getAllAnswers} from \"../../../redux/reducers/question-reducer\";\n\nconst PricingCards = (props) => {\n    const srcAsset = `${configApi.SERVER_URI}/www/templates/images/users/u_${props.login}/`;\n    const certificateCard = (item) => {\n        let name = ''\n        if (item.type === 'Basic') {\n            name = props.rewards.certificate\n        } else {\n            name = props.rewards.diplom\n        }\n        const imgClasses = 'mb-2 mt-2';\n        const linkProps = !props.endDate && {\n            tag: Link,\n            to: item.link\n        }\n        return <Card className={classnames('text-center', {\n            [`${item.type.toLowerCase()}-pricing`]: item.type,\n            popular: true\n        })}>\n            <CardBody>\n                <div className='pricing-badge text-right'>\n                    <Badge color={`light-${item.btn}`} pill>\n                        {item.level}\n                    </Badge>\n                </div>\n                {props.endDate && props.percent >= item.percent ? <img className={`${imgClasses} w-100`} src={`${srcAsset}${item.img}/${name}.jpg`} alt='pricing svg'/> : <Lock className={`${imgClasses} w-100`}/>}\n                <h3>{item.title}</h3>\n                <CardText>{item.subtitle}</CardText>\n                <Button.Ripple color={item.btn}\n                               outline={item.type !== 'Standard'}\n                               block\n                               {...linkProps}\n                               disabled={props.endDate !== '' && props.percent < item.percent}>\n                    {props.endDate && props.percent >= item.percent ? <>\n                        <a className={'d-block'} target={'_blank'}\n                           href={`${srcAsset}${item.img}/${name}.pdf`}>Просмотреть</a>\n                    </> : <>\n                        Получить\n                    </>}\n                </Button.Ripple>\n            </CardBody>\n        </Card>\n    }\n    const renderPricingCards = () => {\n        return props.data.map((item, index) => {\n            return (\n                <>\n                    {item.type === 'Basic' ? <Col key={`${index}_basic`} md={12} className='d-flex justify-content-center'>\n                        <Col md={4} xs={12}>\n                            {certificateCard(item)}\n                        </Col>\n                    </Col> : <Col key={`${index}_nobasic`} md={4} xs='12'>\n                        {certificateCard(item)}\n                    </Col>\n                    }\n                </>\n            )\n        })\n    }\n\n    return (\n        <Row className='pricing-card'>\n            <Col className='mx-auto' sm={{offset: 2, size: 10}} lg={{offset: 2, size: 10}} md='12'>\n                {!props.endDate ? <Row>{renderPricingCards()}</Row> : <Row className='d-flex justify-content-center'>\n                    <Col md={4} xs={12}>\n                        {certificateCard(props.data[0])}\n                    </Col>\n                    {props.percent >= 50 && <Col md={4} xs={12}>\n                        {props.percent >= 50 && props.percent < 65 ? certificateCard(props.data[1]) : props.percent >= 65 && props.percent < 80 ? certificateCard(props.data[2]) : certificateCard(props.data[3])}\n                    </Col>}\n                </Row>}\n            </Col>\n        </Row>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    userId: state.authPage.userId,\n    login: state.authPage.login,\n    endDate: state.profilePage.profile.endDate,\n    percent: state.profilePage.profile.percent\n});\n\nexport default connect(mapStateToProps, {getAllAnswers})(PricingCards);\n","export default __webpack_public_path__ + \"static/media/pricing-Illustration.b00baee8.svg\";","import {Row, Col, Button} from 'reactstrap'\nimport trialSvg from '@src/assets/images/illustration/pricing-Illustration.svg'\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\n\nconst PricingTrial = (props) => {\n    return (\n        <div className='pricing-free-trial'>\n            <Row>\n                <Col className='mx-auto' lg={{size: 10, offset: 3}} sm='12'>\n                    <div className='pricing-trial-content d-flex justify-content-between'>\n                        <div className='text-center text-md-left mt-3'>\n                            <h3 className='text-primary'>Хочешь побороться за призовое место? Участвуй в нашем креативном задании!</h3>\n                            <h5>Напиши эссе по предложенной теме, чтобы побороться за призовое место и получить диплом и приз!</h5>\n                            <div className='mt-2 mt-lg-3'>\n                              {!props.percent || props.percent < 50 ? <Button.Ripple\n                                  disabled={true}\n                                  outline\n                                  block\n                                  color='warning'>Вы набрали недостаточно процентов для прохождения во второй тур.</Button.Ripple> : <Button.Ripple\n                                  color='primary' tag={Link} to={'/pages/creative'}>Перейти</Button.Ripple>}\n                            </div>\n                        </div>\n                        <img\n                            className='pricing-trial-img img-fluid'\n                            src={trialSvg}\n                            alt='trial svg'\n                            style={{\n                                transform: 'scaleX(1)'\n                            }}\n                        />\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    percent: state.profilePage.profile.percent\n});\n\nexport default connect(mapStateToProps)(PricingTrial)\n","import { duration } from 'moment'\nimport { CustomInput } from 'reactstrap'\n\nconst PricingHeader = () => {\n  return (\n    <div className='text-center'>\n      <h1 className='mt-5'>Ваши награды</h1>\n      <p className='mb-2 pb-75'>\n        На данной странице отображены ваши награды за участие и активность в нашей олимпиаде. Их вы можете просмотреть, а так же скачать.\n      </p>\n    </div>\n  )\n}\n\nexport default PricingHeader\n","import React, {useState, useEffect, Fragment} from 'react'\nimport axios from 'axios'\nimport PricingFaqs from './PricingFaqs'\nimport PricingCards from './PricingCards'\nimport PricingTrial from './PricingTrial'\nimport PricingHeader from './PricingHeader'\n\nimport '@styles/base/pages/page-pricing.scss'\nimport {connect} from \"react-redux\";\nimport {getRewards} from \"../../../redux/reducers/profile-reducer\";\n\nconst Pricing = (props) => {\n    const [data, setData] = useState(null),\n        [faq, setFaq] = useState(null)\n\n    useEffect(() => {\n        axios.get('/pricing/data').then(res => {\n            const dataArr = [],\n                faqArr = []\n\n            Object.entries(res.data).forEach(([key, val]) => {\n                if (key !== 'qandA') {\n                    dataArr.push(val)\n                    setData([...dataArr])\n                } else {\n                    faqArr.push(val)\n                    setFaq(faqArr[0])\n                }\n            })\n        })\n    }, [])\n\n    useEffect(() => {\n        if (props.userLogin !== null) {\n            props.getRewards(props.userLogin);\n        }\n    }, [props.userLogin]);\n    return (\n        <div id='pricing-table'>\n            <PricingHeader/>\n            {data !== null && faq !== null ? (\n                <Fragment>\n                    {data !== null && props.rewards !== null &&\n                        <PricingCards data={data} rewards={props.rewards}/>\n                    }\n                    <PricingTrial/>\n                    <PricingFaqs data={faq}/>\n                </Fragment>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    rewards: state.profilePage.rewards,\n    userLogin: state.authPage.login\n});\n\nexport default connect(mapStateToProps, {getRewards})(Pricing);\n"],"sourceRoot":""}
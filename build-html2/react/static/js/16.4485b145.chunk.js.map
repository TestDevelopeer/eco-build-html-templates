{"version":3,"sources":["@core/components/breadcrumbs/index.js","views/pages/testing/Testing.module.css","views/pages/testing/AnswerButton/AnswerButton.module.css","assets/images/illustration/faq-illustrations.svg","views/components/carousel/CarouselBasic.js","views/pages/testing/TestingComponent.js","views/pages/testing/AnswerButton/AnswerButton.js","views/pages/testing/TestingContainer.jsx","views/pages/testing/TestingPage.jsx","views/pages/testing/Testing.js"],"names":["BreadCrumbs","props","breadCrumbTitle","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","className","tag","to","active","module","exports","CarouselBasic","useState","activeIndex","setActiveIndex","animating","setAnimating","onExiting","onExited","next","nextIndex","images","length","previous","slides","map","item","CarouselItem","src","alt","id","Carousel","keyboard","CarouselIndicators","items","onClickHandler","newIndex","CarouselControl","direction","directionText","MyBasicMenu","TestingComponent","s","unselectable","onMouseDown","e","preventDefault","Row","answerButtons","Col","xs","sm","md","lg","xl","Nav","pills","vertical","NavItem","NavLink","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","currentNumber","questionsLength","Progress","animated","striped","value","questionsProgress","illustration","style","transform","onClick","showRules","questionIcon","Badge","color","cx","cy","r","question","question_text","question_type","assets","url","videoPlayer","volume","controls","Button","disabled","selectedAnswer","nextQuestion","buttonNext","AnswerButton","option","onChange","chooseAnswer","answerId","answerCheck","type","name","answerLabel","htmlFor","aria-label","asnwerSpan","answerText","text","card","cardSm","swal","withReactContent","Swal","connect","state","questions","userId","authPage","answers","currQuestion","certificateName","profilePage","login","userName","profile","pullAnswer","setEndTest","assetsPath","configApi","SERVER_URI","selectedAnswerSet","currentQuestion","useEffect","Visibility","change","window","location","pathname","fire","title","icon","confirmButtonText","questionId","question_id","key","assetsCount","push","answer_id","answer_text","userNameCertificate","split","html","endDate","Testing"],"mappings":"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","file":"static/js/16.4485b145.chunk.js","sourcesContent":["// ** React Imports\nimport {Link} from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport {Grid, CheckSquare, MessageSquare, Mail, Calendar} from 'react-feather'\nimport {\n    Breadcrumb,\n    BreadcrumbItem,\n    UncontrolledButtonDropdown,\n    DropdownMenu,\n    DropdownItem,\n    DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n    // ** Props\n    const {breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive} = props\n\n    return (\n        <div className='content-header row'>\n            <div className='content-header-left col-md-9 col-12 mb-2'>\n                <div className='row breadcrumbs-top'>\n                    <div className='col-12'>\n                        {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n                        <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n                            <Breadcrumb>\n                                <BreadcrumbItem tag='li'>\n                                    <Link to='/'>Главная</Link>\n                                </BreadcrumbItem>\n                                {breadCrumbParent ? (\n                                    <BreadcrumbItem tag='li' className='text-primary'>\n                                        {breadCrumbParent}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    ''\n                                )}\n                                {breadCrumbParent2 ? (\n                                    <BreadcrumbItem tag='li' className='text-primary'>\n                                        {breadCrumbParent2}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    ''\n                                )}\n                                {breadCrumbParent3 ? (\n                                    <BreadcrumbItem tag='li' className='text-primary'>\n                                        {breadCrumbParent3}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    ''\n                                )}\n                                <BreadcrumbItem tag='li' active>\n                                    {breadCrumbActive}\n                                </BreadcrumbItem>\n                            </Breadcrumb>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/*<div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n                <div className='form-group breadcrum-right dropdown'>\n                    <UncontrolledButtonDropdown>\n                        <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n                            <Grid size={14}/>\n                        </DropdownToggle>\n                        <DropdownMenu tag='ul' right>\n                            <DropdownItem tag={Link} to='/apps/calendar'>\n                                <Calendar className='mr-1' size={14}/>\n                                <span className='align-middle'>Календарь событий</span>\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledButtonDropdown>\n                </div>\n            </div>*/}\n        </div>\n    )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n    breadCrumbTitle: Proptypes.string.isRequired,\n    breadCrumbActive: Proptypes.string.isRequired\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonNext\":\"Testing_buttonNext__3b5nN\",\"questionIcon\":\"Testing_questionIcon__3W_wT\",\"success\":\"Testing_success__2K7mB\",\"error\":\"Testing_error__2BV16\",\"unselectable\":\"Testing_unselectable__2-2zp\",\"videoPlayer\":\"Testing_videoPlayer__1Z3e4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerCheck\":\"AnswerButton_answerCheck__3KR9P\",\"answerLabel\":\"AnswerButton_answerLabel__17OZK\",\"bubble\":\"AnswerButton_bubble__2NdGR\",\"sparkles-ltr\":\"AnswerButton_sparkles-ltr__3g2AN\",\"sparkles-rtl\":\"AnswerButton_sparkles-rtl__18cSp\",\"asnwerSpan\":\"AnswerButton_asnwerSpan__hz9Go\",\"radio\":\"AnswerButton_radio__1kEVw\",\"card\":\"AnswerButton_card__1XYVK\",\"shine-ltr\":\"AnswerButton_shine-ltr__3XhBf\",\"shine-rtl\":\"AnswerButton_shine-rtl__2kNc6\",\"answerText\":\"AnswerButton_answerText__1N1Lq\",\"cardSm\":\"AnswerButton_cardSm__1rPac\",\"cardContent\":\"AnswerButton_cardContent__sDall\",\"option\":\"AnswerButton_option__Dh37o\"};","export default __webpack_public_path__ + \"static/media/faq-illustrations.3abcf165.svg\";","import { useState } from 'react'\nimport { Carousel, CarouselItem, CarouselControl, CarouselIndicators } from 'reactstrap'\n\nconst CarouselBasic = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [animating, setAnimating] = useState(0)\n\n  const onExiting = () => {\n    setAnimating(true)\n  }\n\n  const onExited = () => {\n    setAnimating(false)\n  }\n\n  const next = () => {\n    if (animating) return\n    const nextIndex = activeIndex === props.images.length - 1 ? 0 : activeIndex + 1\n    setActiveIndex(nextIndex)\n  }\n\n  const previous = () => {\n    if (animating) return\n    const nextIndex = activeIndex === 0 ? props.images.length - 1 : activeIndex - 1\n    setActiveIndex(nextIndex)\n  }\n\n  const goToIndex = newIndex => {\n    if (animating) return\n    setActiveIndex(newIndex)\n  }\n\n  const slides = props.images.map(item => {\n    return (\n      <CarouselItem onExiting={onExiting} onExited={onExited} key={item.id}>\n        <img src={item.src} className='img-fluid' alt={item.id} />\n      </CarouselItem>\n    )\n  })\n  return (\n    <Carousel activeIndex={activeIndex} next={next} previous={previous} keyboard={false}>\n      <CarouselIndicators items={props.images} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction='prev' directionText='Previous' onClickHandler={previous} />\n      <CarouselControl direction='next' directionText='Next' onClickHandler={next} />\n    </Carousel>\n  )\n}\n\nexport default CarouselBasic\n","import React from 'react';\nimport illustration from '@src/assets/images/illustration/faq-illustrations.svg';\nimport {Nav, NavItem, NavLink, Row, Col, Button, Progress, Badge} from 'reactstrap';\nimport s from \"./Testing.module.css\";\nimport 'shepherd.js/dist/css/shepherd.css'\nimport '@styles/react/libs/shepherd-tour/shepherd-tour.scss'\nimport CarouselBasic from \"../../components/carousel/CarouselBasic\";\nimport ReactPlayer from \"react-player\";\nimport {Item, Menu, MenuProvider} from \"react-contexify\";\n\nconst MyBasicMenu = () => {\n    return (\n        <Menu id='menu_id'>\n            <Item>Не пытайся :)</Item>\n        </Menu>\n    );\n}\n\nconst TestingComponent = (props) => {\n    return (\n        <div id='faq-tabs' className={s.unselectable} onMouseDown={(e) => e.preventDefault()}>\n            <Row>\n                {props.answerButtons && <>\n                    <Col xs={12} sm={12} md={6} lg={5} xl={5}>\n                        <div className='faq-navigation d-flex flex-column mb-2 mb-md-0'>\n                            <Nav tag='ul' className='nav-left' pills vertical>\n                                <NavItem tag='li' id={'secondStep'}>\n                                    <NavLink active={true}>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n                                             stroke=\"currentColor\"\n                                             strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                            <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"/>\n                                            <polyline points=\"14 2 14 8 20 8\"/>\n                                            <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"/>\n                                            <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"/>\n                                            <polyline points=\"10 9 9 9 8 9\"/>\n                                        </svg>\n                                        <span className='font-weight-bold'>Вопрос №{props.currentNumber + 1} / {props.questionsLength}</span>\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Progress animated striped className='progress-bar-info mb-1' value={props.questionsProgress} />\n                            <img\n                                className='img-fluid d-none d-md-block'\n                                src={illustration}\n                                alt='illustration'\n                                style={{\n                                    transform: 'scaleX(1)'\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col xs={12} sm={12} md={6} lg={7} xl={7}>\n                        <Row>\n                            <Col xs={12}>\n                                <div className=\"tab-content\">\n                                    <div className=\"tab-pane active\">\n                                        <div className=\"d-flex align-items-center\">\n                                            <div onClick={props.showRules} className={`avatar avatar-tag bg-light-primary mr-1 ${s.questionIcon}`}>\n                                                <Badge color='info' className='badge-glow' id={'firstStep'}>\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" fill=\"none\"\n                                                         stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                                                        <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n                                                        <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"/>\n                                                        <line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"/>\n                                                    </svg>\n                                                </Badge>\n                                            </div>\n                                            <MenuProvider id='menu_id' style={{width: 'max-content'}}>\n                                                <div id={'thirdStep'}>\n                                                    <h3 className='mb-0'>{props.question.question_text}</h3>\n                                                </div>\n                                            </MenuProvider>\n                                            <MyBasicMenu/>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row className='mt-1 mb-1'>\n                            <Col xs={12}>\n                                {props.question.question_type !== 'text' ? props.question.question_type === 'image' ? <CarouselBasic images={props.assets}/> : <ReactPlayer\n                                        url={props.assets[0].src}\n                                        className={`react-player-video ${s.videoPlayer}`}\n                                        width='100%'\n                                        volume={0.5}\n                                        controls={true}\n                                    /> : ''}\n                            </Col>\n                        </Row>\n                        <div className='divider divider-info mb-1'>\n                            <div className='divider-text'>Выберите правильный вариант ответа ниже</div>\n                        </div>\n                        <Row className=\"mt-1\" id={'lastStep'}>\n                            {props.answerButtons}\n                        </Row>\n                        <Row className=\"mt-1 d-flex justify-content-center\">\n                            <Col xs={6}>\n                                <Button disabled={props.selectedAnswer === null} onClick={() => props.nextQuestion()}\n                                        className={s.buttonNext}>Далее</Button>\n                            </Col>\n                        </Row>\n                    </Col> </>\n                }\n            </Row>\n        </div>\n    );\n}\n\nexport default TestingComponent;\n","import React from \"react\";\nimport s from \"./AnswerButton.module.css\";\n\nconst AnswerButton = (props) => {\n    return (\n        <div className={s.option}>\n            <input\n                onChange={() => props.chooseAnswer(props.answerId)}\n                className={s.answerCheck}\n                type=\"radio\"\n                name={props.name}\n                id={props.id}\n                value={props.value}/>\n            <label className={s.answerLabel} htmlFor={props.id} aria-label={props.id}>\n                <span className={s.asnwerSpan}/>\n                <span className={s.answerText}>{props.text}</span>\n                <div className={`${s.card} ${s.cardSm}`}>\n                </div>\n            </label>\n        </div>\n    );\n}\n\nexport default AnswerButton;","import React, {useEffect, useState} from 'react';\nimport TestingComponent from \"./TestingComponent\";\nimport {connect} from \"react-redux\";\nimport {Col} from \"reactstrap\";\nimport AnswerButton from \"./AnswerButton/AnswerButton\";\nimport {setEndTest} from \"../../../redux/reducers/profile-reducer\";\nimport {pullAnswer} from \"../../../redux/reducers/question-reducer\";\nimport Visibility from \"visibilityjs\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport Swal from \"sweetalert2\";\nimport configApi from '../../../api/config';\nconst swal = withReactContent(Swal);\n\nconst TestingContainer = (props) => {\n    /*\n        @showRules = Показываем правила прохождения теста;\n        @currentNumber = Ключ в массиве props.questions для текущего вопроса;\n        @answerButtons = Кнопки с ответами на вопрос;\n        @assetsPath = Путь к асетам вопроса, если тип видео или картинка;\n        @assets = Асеты вопроса, если тип видео или картинка;\n        @[selectedAnswer, selectedAnswerSet] = Текущий выбранный ответ на вопрос;\n        @questionsProgress = Прогресс прохождения тестирования (в процентах);\n        @currentQuestion = Текущий вопрос (в массив вопросов подставляется ключ с номером);\n\n        @nextQuestion = Перейти к след. вопросу,\n                        текущий ключ повышаем на 1,\n                        выкидываем выбранный ответ в state,\n                        обнуляем выбранный ответ;\n        @chooseAnswer = Выбор ответа на вопрос,\n                        при нажатии на ответ записываем его данные,\n                        Id вопроса, Id нажатого ответа, Id пользователя\n\n     */\n    const showRules = () => {\n        swal.fire({\n            title: \"Внимание!\",\n            html: `<h4 class=\"text-info\">Ознакомьтесь с правилами прохождения тестирования:</h4>\n                    <div>\n                        <ol>\n                            <li>\n                                <h5 class=\"font-weight-bolderer mt-1 mb-1\">Прочтите вопрос и выберите один вариант ответа;</h5>\n                            </li>\n                            <li>\n                            <h5 class=\"font-weight-bolderer mt-1 mb-1\">При покидании страницы тестирования ваш результат будет обнулен;</h5>\n                            </li>\n                            <li>\n                                <h5 class=\"font-weight-bolderer mt-1 mb-1\">При обновлении страницы тестирования ваш результат будет обнулен;</h5>           \n                            </li>\n                        </ol>\n                    </div>\n                    <h4>Чтобы открыть правила, нажмите <span class=\"badge-glow badge badge-info ml-1\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"></path><line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line></svg></span></h4>`,\n            icon: \"info\",\n            confirmButtonText: \"ОК\"\n        });\n    }\n\n    let currentNumber = props.currentNumber;\n    let answerButtons = false;\n    const assetsPath = configApi.SERVER_URI;\n    const assets = [];\n    const [selectedAnswer, selectedAnswerSet] = useState(null);\n    const questionsProgress = 100 * currentNumber / props.questions.length;\n    const currentQuestion = props.questions[currentNumber];\n\n    useEffect(() => {\n        props.pullAnswer();\n        Visibility.change(function (e, state) { // Если пользователь перешел на другую вкладку, обнуляем тест;\n            if (state === 'hidden') {\n                if (window.location.pathname === '/react/pages/testing') {\n                    props.pullAnswer();\n                    swal.fire({\n                        title: \"Внимание!\",\n                        text: 'Т.к. вы покинули вкладку тестирования, ваш прогресс был обнулен',\n                        icon: \"warning\",\n                        confirmButtonText: \"Продолжить\"\n                    });\n                }\n            }\n        });\n    }, []);\n\n    const nextQuestion = () => {\n        currentNumber++;\n        props.pullAnswer(selectedAnswer, currentNumber);\n        selectedAnswerSet(null);\n    }\n\n    const chooseAnswer = (answerId) => {\n        selectedAnswerSet({questionId: currentQuestion.question_id, answerId, userId: props.userId})\n    }\n\n    if (currentQuestion) {  // Если вопрос есть;\n        if (currentQuestion.question_type !== 'text') { // Если тип вопроса не текстовый, собраем для него объект асетов\n            for (const key in currentQuestion.assetsCount) {\n                assets.push({\n                    src: `${assetsPath}${currentQuestion.assetsPath}${currentQuestion.question_id}/${currentQuestion.question_type}/${currentQuestion.assetsCount[key]}`,\n                    id: key\n                })\n            }\n        }\n        // Рисуем кнопки с ответами для текущего вопроса;\n        answerButtons = currentQuestion.answers\n            .map(item => (\n                <Col className=\"mb-1 mt-1\" key={item.answer_id} lg={12}>\n                    <AnswerButton\n                        chooseAnswer={chooseAnswer}\n                        name={'answer'}\n                        id={`radio${item.answer_id}`}\n                        value={item.answer_text}\n                        text={item.answer_text}\n                        answerId={item.answer_id}\n                    />\n                </Col>\n            ));\n    } else {    // Если вопроса нет, значит тест пройден, отправляем собранные данные и создаем сертификат;\n        let userNameCertificate = props.certificateName.split(' ');\n        userNameCertificate = userNameCertificate[0] + ' ' + userNameCertificate[1][0] + '.' + userNameCertificate[2][0] + '.';\n        props.setEndTest(props.answers, props.userId, userNameCertificate, props.userName, props.login);\n        props.pullAnswer();\n    }\n\n    return (\n        <TestingComponent\n            selectedAnswer={selectedAnswer}\n            userId={props.userId}\n            question={currentQuestion}\n            nextQuestion={nextQuestion}\n            currentNumber={currentNumber}\n            questionsLength={props.questions.length}\n            questionsProgress={questionsProgress}\n            answerButtons={answerButtons}\n            assets={assets}\n            showRules={showRules}\n        />\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    questions: state.questions.questions,\n    userId: state.authPage.userId,\n    answers: state.questions.answers,\n    currentNumber: state.questions.currQuestion,\n    certificateName: state.profilePage.certificateName,\n    login: state.authPage.login,\n    userName: state.profilePage.profile.name\n});\n\nexport default connect(mapStateToProps, {pullAnswer, setEndTest})(TestingContainer);\n","import {connect} from \"react-redux\";\nimport TestingContainer from \"./TestingContainer\";\nimport React from \"react\";\nimport {Redirect} from \"react-router-dom\";\n\nconst TestingPage = (props) => {\n    return (\n        <>\n            {!props.endDate ? <TestingContainer /> : <Redirect to=\"/pages/result\" />}\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    endDate: state.profilePage.profile.endDate\n});\n\nexport default connect(mapStateToProps)(TestingPage);","import React, {Fragment} from 'react';\nimport Breadcrumbs from '@components/breadcrumbs';\nimport '@styles/base/pages/page-faq.scss'\nimport {Col, Row} from \"reactstrap\";\nimport TestingPage from \"./TestingPage\";\n\nconst Testing = () => {\n    return (\n        <Fragment>\n            <Row className=\"d-flex justify-content-center\">\n                <Col lg={8}>\n                    <Breadcrumbs breadCrumbTitle='Тестирование' breadCrumbActive='Тестирование'/>\n                    <TestingPage/>\n                </Col>\n            </Row>\n        </Fragment>\n    )\n}\n\nexport default Testing;\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/authentication/Authentication.module.css","FormsControl/FormsControls.js","utils/validators/validators.js","FormsControl/FormsControls.module.css","views/pages/authentication/ReCaptcha.js","assets/images/logo_ecoworld.png","@core/components/wizard/index.js","views/forms/wizard/steps-with-validation/Address.js","views/pages/authentication/Register/PersonalInfo.js","views/pages/authentication/Register/AccountDetails.js","views/pages/authentication/Register/RegisterFormContainer.jsx","views/pages/authentication/Register/Register.js","views/pages/authentication/Register/RegisterContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","props","elem","hasError","isOpen","useState","tooltipOpen","setTooltipOpen","className","s","formControl","placement","target","id","toggle","Input","restProps","child","element","PhoneInputMask","mask","maskChar","createInput","text","placeholder","value","isDisabled","for","type","defaultInput","readOnly","disabled","onChange","e","preventDefault","createField","validators","component","validate","required","trim","isLatin","re","length","test","String","toLowerCase","LengthPhone","split","LengthLogin","LengthPwd","isThreeWords","isEmail","isSymbols","isEqual","valueById","document","getElementById","ReCaptcha","theme","sitekey","Wizard","forwardRef","ref","steps","separator","options","instance","activeIndex","setActiveIndex","stepper","useEffect","Stepper","current","addEventListener","event","detail","indexStep","classnames","map","step","index","crossed","active","data-target","icon","title","subtitle","content","defaultProps","size","AdressFormContainer","reduxForm","form","invalid","handleSubmit","captchaValue","setCaptchaValue","onSubmit","Row","Col","xs","sm","md","lg","xl","name","checked","htmlFor","href","Button","Ripple","color","onClick","previous","Address","endForm","formData","a","PersonalInfoFormContainer","PersonalInfo","setEducation","next","AccountDetailsFormContainer","outline","AccountDetails","setPersonal","RegisterFormContainer","setStepper","useRef","el","Register","logo","brandLogo","src","alt","CardTitle","tag","message","CardText","to","compose","connect","state","messageAuthForm","appInit","register","history","useHistory","ability","useContext","AbilityContext","personal","education","ecoLogo","account"],"mappings":"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","file":"static/js/14.67ac2938.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Authentication_logo__3C5vM\",\"brandLogo\":\"Authentication_brandLogo__2dpsF\",\"ecoLogo\":\"Authentication_ecoLogo__1znFD\",\"ecoButton\":\"Authentication_ecoButton__MupwE\",\"authButton\":\"Authentication_authButton__1QcMp\"};","import React, {useState} from \"react\";\nimport s from \"./FormsControls.module.css\";\nimport {Field} from \"redux-form\";\nimport InputMask from 'react-input-mask';\nimport {FormGroup, Label, Tooltip} from \"reactstrap\";\nimport Badge from \"reactstrap/es/Badge\";\n\nconst FormControl = ({input, meta: {touched, error}, children, elem, props}) => {\n    const hasError = touched && error;\n    const isOpen = hasError && true;\n    const [tooltipOpen, setTooltipOpen] = useState(false)\n    return (\n        <div className={`${s.formControl} ${hasError ? s.error : \"\"}`}>\n            {children}\n            <Tooltip\n                placement='top'\n                isOpen={isOpen}\n                target={props.id}\n                toggle={() => setTooltipOpen(!tooltipOpen)}\n            >\n                {error}\n            </Tooltip>\n        </div>\n    );\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, element, ...restProps} = props;\n    return (\n        <FormControl {...props} props={props}>\n            <input {...input} {...restProps} />\n        </FormControl>\n    );\n}\n\nexport const PhoneInputMask = (props) => {\n    const {input, meta, child, element, ...restProps} = props;\n    return (\n        <FormControl {...props} props={props}>\n            <InputMask {...input} {...restProps} mask=\"+7(999) 999-99-99\" maskChar=\"_\"/>\n        </FormControl>\n    );\n}\n\nexport const createInput = (text, placeholder, id, value, isDisabled) => (\n    <FormGroup>\n        <Label className='form-label' for={id}>\n            {text}\n        </Label>\n        <input placeholder={placeholder}\n               id={id}\n               type='text'\n               className={`input-group-merge is-touched is-dirty av-valid form-control ${s.defaultInput}`}\n               value={value}\n               readOnly={isDisabled}\n               disabled={isDisabled}\n               onChange={e => e.preventDefault()}/>\n    </FormGroup>\n);\n\nexport const createField = (validators, component, text, props = {}) => (\n    <FormGroup>\n        <Label className='form-label' for={props.id}>\n            {text}\n        </Label>\n        <Field\n            validate={validators}\n            component={component}\n            {...props}\n        />\n    </FormGroup>\n);","export const required = (value = '') => {\n    value = value.trim();\n    if (!value) return 'Обязательное поле!';\n    return undefined;\n}\nexport const isLatin = (value = '') => {\n    value = value.trim();\n    const re = /^[a-zA-Z0-9]+$/;\n    if (value.length !== 0) {\n        if (!re.test(String(value).toLowerCase())) return 'Поле может содержать только буквы латинского алфавита и цифры!';\n    }\n    return undefined;\n}\nexport const LengthPhone = (value = '') => {\n    value = value.trim();\n    value = value.split('_');\n    if (value.length > 1) return `Неверный номер!`;\n    return undefined;\n}\nexport const LengthLogin = (value = '') => {\n    value = value.trim();\n    if (value.length > 20 || value.length < 4) return `Минимальная длина логина 4, максимальная 20 символов!`;\n    return undefined;\n}\nexport const LengthPwd = (value = '') => {\n    value = value.trim();\n    if (value.length > 20 || value.length < 6) return `Минимальная длина пароля 6, максимальная 20 символов!`;\n    return undefined;\n}\nexport const isThreeWords = (value = '') => {\n    value = value.trim().split(' ');\n    if (value.length < 3 || value.length > 3) return 'Поле должно состоять из 3 слов!';\n    return undefined;\n}\nexport const isEmail = (value = '') => {\n    value = value.trim();\n    if (value.length !== 0) {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!re.test(String(value).toLowerCase())) return 'Неверный формат E-mail';\n    }\n    return undefined;\n}\nexport const isSymbols = (value = '') => {\n    value = value.trim();\n    const re = !/[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g.test(value);\n    if (!re) return 'Поле не должно содержать специальных символов!';\n    return undefined;\n}\nexport const isEqual = (value = '') => {\n    const valueById = document.getElementById('password').value.trim();\n    value = value.trim();\n    if (value !== valueById) return 'Поля не совпадают!';\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1wiZn\",\"error\":\"FormsControls_error__29LGU\",\"textError\":\"FormsControls_textError__1T0fO\",\"defaultInput\":\"FormsControls_defaultInput__1ELuy\"};","import ReCAPTCHA from \"react-google-recaptcha\";\nimport React from \"react\";\n\nconst ReCaptcha = (props) => {\n    return (\n        <ReCAPTCHA\n            theme=\"light\"\n            sitekey=\"6Lc7uWAaAAAAAGMxL2PjTNUtaCZ0U24UvHP7YINi\"\n            onChange={props.onChange}\n        />\n    );\n}\n\nexport default ReCaptcha;","export default __webpack_public_path__ + \"static/media/logo_ecoworld.71163199.png\";","// ** React Imports\nimport { useEffect, useState, Fragment, forwardRef } from 'react'\n\n// ** Third Party Components\nimport Stepper from 'bs-stepper'\nimport classnames from 'classnames'\nimport { PropTypes } from 'prop-types'\nimport { ChevronRight } from 'react-feather'\n\n// ** Styles\nimport 'bs-stepper/dist/css/bs-stepper.min.css'\nimport '../../../@core/scss/base/plugins/forms/form-wizard.scss'\n\nconst Wizard = forwardRef((props, ref) => {\n  // ** Props\n  const { type, className, steps, separator, options, instance } = props\n\n  // ** State\n  const [activeIndex, setActiveIndex] = useState(0)\n\n  // ** Vars\n  let stepper = null\n\n  // ** Step change listener on mount\n  useEffect(() => {\n    stepper = new Stepper(ref.current, options)\n\n    ref.current.addEventListener('shown.bs-stepper', function (event) {\n      setActiveIndex(event.detail.indexStep)\n    })\n\n    if (instance) {\n      instance(stepper)\n    }\n  }, [])\n\n  // ** Renders Wizard Header\n  const renderHeader = () => {\n    return steps.map((step, index) => {\n      return (\n        <Fragment key={step.id}>\n          {index !== 0 && index !== steps.length ? <div className='line'>{separator}</div> : null}\n          <div\n            className={classnames('step', {\n              crossed: activeIndex > index,\n              active: index === activeIndex\n            })}\n            data-target={`#${step.id}`}\n          >\n            <button type='button' className='step-trigger'>\n              <span className='bs-stepper-box'>{step.icon ? step.icon : index + 1}</span>\n              <span className='bs-stepper-label'>\n                <span className='bs-stepper-title'>{step.title}</span>\n                {step.subtitle ? <span className='bs-stepper-subtitle'>{step.subtitle}</span> : null}\n              </span>\n            </button>\n          </div>\n        </Fragment>\n      )\n    })\n  }\n\n  // ** Renders Wizard Content\n  const renderContent = () => {\n    return steps.map((step, index) => {\n      return (\n        <div\n          className={classnames('content', {\n            'active dstepper-block': activeIndex === index\n          })}\n          id={step.id}\n          key={step.id}\n        >\n          {step.content}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={classnames('bs-stepper', {\n        [className]: className,\n        vertical: type === 'vertical',\n        'vertical wizard-modern': type === 'modern-vertical',\n        'wizard-modern': type === 'modern-horizontal'\n      })}\n    >\n      <div className='bs-stepper-header'>{renderHeader()}</div>\n      <div className='bs-stepper-content'>{renderContent()}</div>\n    </div>\n  )\n})\n\nexport default Wizard\n\n// ** Default Props\nWizard.defaultProps = {\n  type: 'horizontal',\n  separator: <ChevronRight size={17} />,\n  options: {}\n}\n\n// ** PropTypes\nWizard.propTypes = {\n  type: PropTypes.string,\n  instance: PropTypes.func,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  separator: PropTypes.element,\n  steps: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      subtitle: PropTypes.string,\n      icon: PropTypes.any,\n      content: PropTypes.any.isRequired\n    })\n  ).isRequired\n}\n","import React, {Fragment, useState} from 'react'\nimport {ArrowLeft, ArrowRight} from 'react-feather'\nimport {Row, Col, Button} from 'reactstrap'\nimport {reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../../../../FormsControl/FormsControls\";\nimport {isEmail, isEqual, isLatin, isSymbols, LengthLogin, LengthPwd, required} from \"../../../../utils/validators/validators\";\nimport ReCaptcha from \"../../../pages/authentication/ReCaptcha\";\n\nconst AdressForm = ({stepper, invalid, handleSubmit}) => {\n    const [captchaValue, setCaptchaValue] = useState(null);\n    const onChange = (value) => {\n        setCaptchaValue(value);\n    }\n    return (\n        <form className='auth-login-form mt-2' onSubmit={handleSubmit}>\n            <Row>\n                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                    {createField([isEmail], Input, 'E-mail', {\n                        placeholder: 'Введите E-mail, если имеется',\n                        name: 'user_email',\n                        id: 'email',\n                        type: 'email',\n                        className: \"input-group-merge is-touched is-dirty av-valid form-control\"\n                    })}\n                    {createField([required, LengthLogin, isSymbols, isLatin], Input, 'Логин', {\n                        placeholder: 'Используется для входа в аккаунт',\n                        name: 'user_login',\n                        id: 'login',\n                        type: 'text',\n                        className: \"input-group-merge is-touched is-dirty av-valid form-control\"\n                    })}\n                    {createField([required, LengthPwd, isSymbols, isLatin], Input, 'Пароль', {\n                        placeholder: 'Придумайте пароль',\n                        name: 'user_pwd',\n                        id: 'password',\n                        type: 'password',\n                        className: \"input-group-merge is-touched is-dirty av-valid form-control\"\n                    })}\n                    {createField([required, LengthPwd, isSymbols, isEqual, isLatin], Input, 'Повторите пароль', {\n                        placeholder: 'Введите пароль еще раз',\n                        name: 'rePassword',\n                        id: 'rePassword',\n                        type: 'password',\n                        className: \"input-group-merge is-touched is-dirty av-valid form-control\"\n                    })}\n                </Col>\n            </Row>\n            <Row className=\"animate__animated animate__fadeIn animate__fast\">\n                <Col xs={12} className='mb-1 d-flex justify-content-center'>\n                    <ReCaptcha onChange={onChange} />\n                </Col>\n            </Row>\n            <div className=\"form-group\">\n                <div className=\"form-control border-0 p-0 h-auto is-touched is-dirty av-valid\">\n                    <div className=\"custom-control-Primary is-touched is-dirty av-valid custom-checkbox custom-control\">\n                        <input name=\"Remember Me\"\n                               type=\"checkbox\"\n                               id=\"remember-me\"\n                               className=\"custom-control-input\"\n                               disabled\n                               readOnly\n                               checked={true}/>\n                        <label className=\"custom-control-label\" htmlFor=\"remember-me\">\n                            Регистрируясь вы принимаете условия\n                            <a className=\"ml-25\" href=\"/\">пользовательского соглашения</a>.\n                        </label>\n                    </div>\n                </div>\n                <div className=\"valid-feedback\"/>\n            </div>\n            <div className='d-flex justify-content-between'>\n                <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\n                    <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'/>\n                    <span className='align-middle d-sm-inline-block d-none'>Назад</span>\n                </Button.Ripple>\n                <Button.Ripple disabled={invalid || captchaValue === null} type='submit' color='success' className='btn-submit'>\n                    <span className='align-middle d-sm-inline-block d-none'>Далее</span>\n                    <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'/>\n                </Button.Ripple>\n            </div>\n        </form>\n    );\n}\n\nconst AdressFormContainer = reduxForm({form: 'adressform'})(AdressForm);\n\nconst Address = ({stepper, onSubmit}) => {\n    const endForm = async (formData) => {\n        onSubmit(formData);\n    }\n    return (\n        <Fragment>\n            <div className='content-header'>\n                <h5 className='mb-0'>Данные для входа</h5>\n                <small>Заполните поля ниже чтобы закончить регистрацию.</small>\n            </div>\n            <AdressFormContainer onSubmit={endForm} stepper={stepper}/>\n        </Fragment>\n    )\n}\n\nexport default Address\n","import React, {Fragment} from 'react'\nimport {ArrowLeft, ArrowRight} from 'react-feather'\nimport {Row, Col, Button} from 'reactstrap'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport {reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../../../../FormsControl/FormsControls\";\nimport {isSymbols, isThreeWords, required} from \"../../../../utils/validators/validators\";\n\nconst PersonalInfoForm = ({stepper, invalid, handleSubmit}) => {\n    return (\n        <form className='auth-login-form mt-2' onSubmit={handleSubmit}>\n            <Row>\n                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                    {createField([required, isSymbols], Input, 'Учебное заведение', {\n                        placeholder: 'Например: Средняя школа №19',\n                        name: 'user_school',\n                        id: 'school',\n                        type: 'text',\n                        className: \"input-group-merge is-touched is-dirty av-valid form-control\"\n                    })}\n                    {createField([required, isSymbols], Input, 'Класс / Курс', {\n                        placeholder: 'Например: 10 класс / 1 курс',\n                        name: 'user_class',\n                        id: 'classRoom',\n                        type: 'text',\n                        className: \"input-group-merge is-touched is-dirty av-valid form-control\"\n                    })}\n                    {createField([required, isThreeWords, isSymbols], Input, 'ФИО руководителя', {\n                        placeholder: 'Например: Иванова Людмила Ивановна',\n                        name: 'user_teacher',\n                        id: 'teacherName',\n                        type: 'text',\n                        className: \"input-group-merge is-touched is-dirty av-valid form-control\"\n                    })}\n                    {createField([required, isSymbols], Input, 'Должность руководителя', {\n                        placeholder: 'Например: Преподаватель',\n                        name: 'user_teacherPosition',\n                        id: 'teacherPosition',\n                        type: 'text',\n                        className: \"input-group-merge is-touched is-dirty av-valid form-control\"\n                    })}\n                </Col>\n            </Row>\n            <div className='d-flex justify-content-between'>\n                <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\n                    <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'/>\n                    <span className='align-middle d-sm-inline-block d-none'>Назад</span>\n                </Button.Ripple>\n                <Button.Ripple disabled={invalid} type='submit' color='primary' className='btn-next'>\n                    <span className='align-middle d-sm-inline-block d-none'>Далее</span>\n                    <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'/>\n                </Button.Ripple>\n            </div>\n        </form>\n    )\n}\n\nconst PersonalInfoFormContainer = reduxForm({form: 'personalform'})(PersonalInfoForm);\n\nconst PersonalInfo = ({stepper, setEducation}) => {\n    const onSubmit = (formData) => {\n        setEducation(formData);\n        stepper.next();\n    }\n\n    return (\n        <Fragment>\n            <div className='content-header'>\n                <h5 className='mb-0'>Образование</h5>\n                <small>Заполните поля ниже чтобы перейти на следующую форму.</small>\n            </div>\n            <PersonalInfoFormContainer onSubmit={onSubmit} stepper={stepper}/>\n        </Fragment>\n    )\n}\n\nexport default PersonalInfo\n","import React, {Fragment} from 'react'\nimport {ArrowLeft, ArrowRight} from 'react-feather'\nimport {Row, Col, Button} from 'reactstrap'\nimport {createField, Input, PhoneInputMask} from \"../../../../FormsControl/FormsControls\";\nimport {isSymbols, isThreeWords, LengthPhone, required} from \"../../../../utils/validators/validators\";\nimport {reduxForm} from \"redux-form\";\n\nconst AccountDetailsForm = ({invalid, handleSubmit}) => {\n    return (\n        <form className='auth-login-form mt-2' onSubmit={handleSubmit}>\n            <Row>\n                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                    {createField([required, isThreeWords, isSymbols], Input, 'ФИО', {\n                        placeholder: 'Например: Петров Иван Николаевич',\n                        name: 'user_name',\n                        id: 'userName',\n                        type: 'text',\n                        className: \"input-group-merge is-touched is-dirty av-valid form-control\"\n                    })}\n                    {createField([required, isSymbols], Input, 'Город', {\n                        placeholder: 'Например: Шахты',\n                        name: 'user_city',\n                        id: 'city',\n                        type: 'text',\n                        className: \"input-group-merge is-touched is-dirty av-valid form-control\"\n                    })}\n                    {createField([required, LengthPhone], PhoneInputMask, 'Телефон', {\n                        placeholder: 'Ваш номер телефона',\n                        name: 'user_phone',\n                        id: 'phone',\n                        type: 'text',\n                        className: \"input-group-merge is-touched is-dirty av-valid form-control\"\n                    })}\n                    {createField([required], Input, 'Соц. сети', {\n                        placeholder: 'Ссылки на свои соц. сети',\n                        name: 'user_social',\n                        id: 'social',\n                        type: 'text',\n                        className: \"input-group-merge is-touched is-dirty av-valid form-control\"\n                    })}\n                </Col>\n            </Row>\n            <div className='d-flex justify-content-between'>\n                <Button.Ripple color='secondary' className='btn-prev' outline disabled>\n                    <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'/>\n                    <span className='align-middle d-sm-inline-block d-none'>Назад</span>\n                </Button.Ripple>\n                <Button.Ripple disabled={invalid} type='submit' color='primary' className='btn-next'>\n                    <span className='align-middle d-sm-inline-block d-none'>Далее</span>\n                    <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'/>\n                </Button.Ripple>\n            </div>\n        </form>\n    );\n}\n\nconst AccountDetailsFormContainer = reduxForm({form: 'detailsform'})(AccountDetailsForm);\n\nconst AccountDetails = ({stepper, setPersonal}) => {\n    const onSubmit = (formData) => {\n        setPersonal(formData);\n        stepper.next();\n    }\n    return (\n        <Fragment>\n            <div className='content-header'>\n                <h5 className='mb-0'>Основная информация</h5>\n                <small className='text-muted'>Заполните поля ниже чтобы перейти на следующую форму.</small>\n            </div>\n            <AccountDetailsFormContainer onSubmit={onSubmit}/>\n        </Fragment>\n    )\n}\n\nexport default AccountDetails;\n","import React, {useRef, useState} from 'react';\nimport Wizard from '@components/wizard';\nimport Address from '../../../../views/forms/wizard/steps-with-validation/Address';\nimport PersonalInfo from './PersonalInfo';\nimport AccountDetails from './AccountDetails';\n\nconst RegisterFormContainer = (props) => {\n    const [stepper, setStepper] = useState(null)\n    const ref = useRef(null)\n    const steps = [\n        {\n            id: 'account-details',\n            title: 'Основная информация',\n            subtitle: 'Введите информацию о себе.',\n            content: <AccountDetails setPersonal={props.setPersonal} stepper={stepper} type='wizard-vertical'/>\n        },\n        {\n            id: 'personal-info',\n            title: 'Образование',\n            subtitle: 'Введите информацию о месте учебы.',\n            content: <PersonalInfo setEducation={props.setEducation} stepper={stepper} type='wizard-vertical'/>\n        },\n        {\n            id: 'step-address',\n            title: 'Данные для входа',\n            subtitle: 'Введите данные для входа в аккаунт.',\n            content: <Address stepper={stepper} onSubmit={props.onSubmit} type='wizard-vertical'/>\n        }\n    ]\n    return (\n        <div className='horizontal-wizard'>\n            <Wizard type='vertical' instance={el => setStepper(el)} ref={ref} steps={steps}/>\n        </div>\n    )\n}\n\nexport default RegisterFormContainer;","import {Link} from 'react-router-dom'\nimport {Row, Col, CardTitle, CardText, Button} from 'reactstrap'\nimport '@styles/base/pages/page-auth.scss'\nimport RegisterFormContainer from \"./RegisterFormContainer\";\nimport s from '../Authentication.module.css';\nimport React from \"react\";\n\nconst Register = (props) => {\n    return (\n        <div className='auth-wrapper auth'>\n            <Row className='auth-inner m-0'>\n                <Col xs={12} className={s.logo}>\n                    <a className={`brand-logo ${s.brandLogo}`} href='https://theworldbuilder.ru/'>\n                        <img src={props.logo} alt=\"\"/>\n                    </a>\n                </Col>\n                <Col xs={12} className='d-flex align-items-center'>\n                    <Col className='px-xl-2 mx-auto' xs={12} md={8}>\n                        <CardTitle tag='h2' className='font-weight-bold mb-1'>\n                            {props.message} 🚀\n                        </CardTitle>\n                        <CardText className='mb-2'>Зарегистрируйтесь, чтобы получить доступ в личный кабинет!</CardText>\n                        <RegisterFormContainer\n                            setPersonal={props.setPersonal}\n                            setEducation={props.setEducation}\n                            onSubmit={props.onSubmit}/>\n                        <p className='text-center mt-2'>\n                            <span className='mr-25'>Уже есть аккаунт?</span>\n                            <Link to='/login'>\n                                <span>Войти</span>\n                            </Link>\n                        </p>\n                       {/* <div className='divider my-2'>\n                            <div className='divider-text'>или зарегистрируйтесь с помощью EcoWorld</div>\n                        </div>\n                        <div className='auth-footer-btn d-flex justify-content-center mb-2'>\n                            <Button.Ripple tag={Link} to='/login-v1' color={'white'} className={s.ecoButton}>\n                                <img src={props.ecoLogo} alt=\"\"/>\n                            </Button.Ripple>\n                        </div>*/}\n                    </Col>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Register\n","import React, {useContext, useState} from 'react'\nimport '@styles/base/pages/page-auth.scss'\nimport Register from \"./Register\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {register} from \"../../../../redux/reducers/auth-reducer\";\nimport {useHistory} from \"react-router-dom\";\nimport {AbilityContext} from \"../../../../utility/context/Can\";\nimport logo from '../../../../assets/images/logo.png';\nimport ecoLogo from '../../../../assets/images/logo_ecoworld.png';\n\nconst RegisterContainer = (props) => {\n    const history = useHistory();\n    const ability = useContext(AbilityContext);\n    const [personal, setPersonal] = useState(null);\n    const [education, setEducation] = useState(null);\n    const onSubmit = (account) => {\n        const formData = {\n            ...personal,\n            ...education,\n            ...account\n        }\n        props.register(formData, history, ability);\n    }\n    return (\n        <Register setPersonal={setPersonal}\n                  setEducation={setEducation}\n                  logo={logo}\n                  ecoLogo={ecoLogo}\n                  message={props.messageAuthForm}\n                  onSubmit={onSubmit}/>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    messageAuthForm: state.appInit.messageAuthForm\n});\n\nexport default compose(connect(mapStateToProps, {register}))(RegisterContainer);\n"],"sourceRoot":""}